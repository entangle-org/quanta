import math;
# import quanta.core.gates.h;

@quantum
@adjoint
function bell(qubit q0, qubit q1) -> void {
  h(q0);
  cx(q0, q1);
}

class QubitOps {
  @quantum
  function entangle(qubit a, qubit b) -> void {
    h(a);
    cx(a, b);
  }
}

final int a = 5;
string s = "hello";
char c = 'a';
float pi = 3.14f;
@state('0') qubit q0;
bit b = 0;
bit b0 = measure q0;

function classicalAdd(int x, int y) -> int {
  return x + y;
}

function main() -> int {
  int total = classicalAdd(2, 3);
  echo(total);
  if (total > 0) {
    reset q0;
  }
  for (int i = 0; i < 3; i = i + 1) {
    echo(i);
  }
  return 0;
}
